<?xml version="1.0" encoding="UTF-8"?>
<metadata>
    
    <attr name="type" path="/api/package[@name='com.google.android.exoplayer2.source.dash.manifest']/class[@name='RepresentationKey']/method[@name='compareTo']/parameter">java.lang.Object</attr>

    <attr name="type" path="/api/package[@name='com.google.android.exoplayer2.source.dash.offline']/class[@name='DashDownloader']/method[@name='getSegments']/parameter[@name='manifest']">java.lang.Object</attr>
    <attr name="return" path="/api/package[@name='com.google.android.exoplayer2.source.dash.offline']/class[@name='DashDownloader']/method[@name='getManifest']">java.lang.Object</attr>

    <attr name="return" path="/api/package[@name='com.google.android.exoplayer2.source.dash.manifest']/class[@name='DashManifestParser']/method[@name='parse' and count(parameter)=2 and parameter[1][@type='android.net.Uri'] and parameter[2][@type='java.io.InputStream']]">java.lang.Object</attr>
    <attr name="return" path="/api/package[@name='com.google.android.exoplayer2.source.dash']/class[@name='DashMediaSource.Iso8601Parser']/method[@name='parse' and count(parameter)=2 and parameter[1][@type='android.net.Uri'] and parameter[2][@type='java.io.InputStream']]">java.lang.Object</attr>

    <attr name="return" path="/api/package[@name='com.google.android.exoplayer2.source.dash']/class[@name='DashMediaSource.Factory']/method[@name='createMediaSource' and count(parameter)=1 and parameter[1][@type='android.net.Uri']]">Com.Google.Android.Exoplayer2.Source.IMediaSource</attr>
    <attr name="return" path="/api/package[@name='com.google.android.exoplayer2.source.dash']/class[@name='DashMediaSource.Factory']/method[@name='createMediaSource' and count(parameter)=3 and parameter[1][@type='android.net.Uri'] and parameter[2][@type='android.os.Handler'] and parameter[3][@type='com.google.android.exoplayer2.source.MediaSourceEventListener']]">Com.Google.Android.Exoplayer2.Source.IMediaSource</attr>
    <attr name="return" path="/api/package[@name='com.google.android.exoplayer2.source.dash']/class[@name='DashMediaSource.Factory']/method[@name='setDrmSessionManager' and count(parameter)=1 and parameter[1][@type='com.google.android.exoplayer2.drm.DrmSessionManager&lt;?&gt;']]">Com.Google.Android.Exoplayer2.Source.IMediaSourceFactory</attr>
    
    <attr name="visibility" path="/api/package[@name='com.google.android.exoplayer2.source.dash.offline']/class[@name='DashDownloader']/method[@name='getManifest' and count(parameter)=2 and parameter[1][@type='com.google.android.exoplayer2.upstream.DataSource'] and parameter[2][@type='android.net.Uri']]">public</attr>

    <attr name="visibility" path="/api/package[@name='com.google.android.exoplayer2.source.dash']/class[@name='DashMediaSource']/method[@name='prepareSourceInternal' and count(parameter)=2 and parameter[1][@type='com.google.android.exoplayer2.ExoPlayer'] and parameter[2][@type='boolean']]">protected</attr>
    <attr name="visibility" path="/api/package[@name='com.google.android.exoplayer2.source.dash']/class[@name='DashMediaSource']/method[@name='releaseSourceInternal' and count(parameter)=0]">protected</attr>

    <attr name="return" path="/api/package[@name='com.google.android.exoplayer2.source.dash.offline']/class[@name='DashDownloadAction']/method[@name='createDownloader' and count(parameter)=1 and parameter[1][@type='com.google.android.exoplayer2.offline.DownloaderConstructorHelper']]">com.google.android.exoplayer2.offline.Downloader</attr>
    <attr name="return" path="/api/package[@name='com.google.android.exoplayer2.source.dash.offline']/class[@name='DashDownloadHelper']/method[@name='getRemoveAction' and count(parameter)=1 and parameter[1][@type='byte[]']]">com.google.android.exoplayer2.offline.DownloadAction</attr>
    <attr name="return" path="/api/package[@name='com.google.android.exoplayer2.source.dash.offline']/class[@name='DashDownloadHelper']/method[@name='getDownloadAction' and count(parameter)=2 and parameter[1][@type='byte[]'] and parameter[2][@type='java.util.List&lt;com.google.android.exoplayer2.offline.TrackKey&gt;']]">com.google.android.exoplayer2.offline.DownloadAction</attr>

    <attr name="type" path="/api/package[@name='com.google.android.exoplayer2.source.dash.offline']/class[@name='DashDownloadHelper']/method[@name='getDownloadAction' and count(parameter)=2 and parameter[1][@type='byte[]'] and parameter[2][@type='java.util.List&lt;com.google.android.exoplayer2.offline.TrackKey&gt;']]/parameter[2]">Java.Util.IList</attr>

    <attr name="type" path="/api/package[@name='com.google.android.exoplayer2.source.dash.offline']/class[@name='DashDownloadAction']/method[@name='writeKey']/parameter[2]">java.lang.Object</attr>

    <attr name="return" path="/api/package[@name='com.google.android.exoplayer2.source.dash.manifest']/class[@name='DashManifest']/method[@name='copy' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;com.google.android.exoplayer2.source.dash.manifest.RepresentationKey&gt;']]">java.lang.Object</attr>
    <attr name="type" path="/api/package[@name='com.google.android.exoplayer2.source.dash.manifest']/class[@name='DashManifest']/method[@name='copy' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;com.google.android.exoplayer2.source.dash.manifest.RepresentationKey&gt;']]/parameter[1]">System.Collections.IList</attr>

    <!-- Only in debug mode  -->
    <attr name="return" path="/api/package[@name='com.google.android.exoplayer2.source.dash.offline']/class[@name='DashDownloader']/method[@name='getAllRepresentationKeys' and count(parameter)=0]">Java.Lang.Object[]</attr>
    <attr name="type" path="/api/package[@name='com.google.android.exoplayer2.source.dash.offline']/class[@name='DashDownloader']/method[@name='getSegments']/parameter[@name='keys']">java.lang.Object[]</attr>
    <attr name="return" path="/api/package[@name='com.google.android.exoplayer2.source.dash.manifest']/class[@name='FilteringDashManifestParser']/method[@name='parse' and count(parameter)=2 and parameter[1][@type='android.net.Uri'] and parameter[2][@type='java.io.InputStream']]">java.lang.Object</attr>

  <attr name="visibility" path="/api/package[@name='com.google.android.exoplayer2.source.dash']/class[@name='DashMediaSource']/method[@name='prepareSourceInternal' and count(parameter)=3 and parameter[1][@type='com.google.android.exoplayer2.ExoPlayer'] and parameter[2][@type='boolean'] and parameter[3][@type='com.google.android.exoplayer2.upstream.TransferListener']]">protected</attr>

  <attr name="type" path="/api/package[@name='com.google.android.exoplayer2.source.dash']/class[@name='DefaultDashChunkSource']/method[@name='getNextChunk' and count(parameter)=4 and parameter[1][@type='long'] and parameter[2][@type='long'] and parameter[3][@type='java.util.List&lt;? extends com.google.android.exoplayer2.source.chunk.MediaChunk&gt;'] and parameter[4][@type='com.google.android.exoplayer2.source.chunk.ChunkHolder']]/parameter[3]">Java.Util.IList</attr>
  <attr name="return" path="/api/package[@name='com.google.android.exoplayer2.source.dash.manifest']/class[@name='DashManifest']/method[@name='copy' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;com.google.android.exoplayer2.offline.StreamKey&gt;']]">java.lang.Object</attr>

  <attr name="visibility" path="/api/package[@name='com.google.android.exoplayer2.source.dash']/class[@name='DashMediaSource']/method[@name='prepareSourceInternal' and count(parameter)=1 and parameter[1][@type='com.google.android.exoplayer2.upstream.TransferListener']]">protected</attr>

  <!--<attr path="//interface/method[@abstract='false']" name="abstract">true</attr>-->
    
    
</metadata>